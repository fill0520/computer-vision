import static com.googlecode.javacpp.Loader.sizeof;
import static com.googlecode.javacv.cpp.opencv_core.CV_FILLED;
import static com.googlecode.javacv.cpp.opencv_core.CV_RGB;
import static com.googlecode.javacv.cpp.opencv_core.IPL_DEPTH_8U;
import static com.googlecode.javacv.cpp.opencv_core.cvCreateImage;
import static com.googlecode.javacv.cpp.opencv_core.cvCreateMemStorage;
import static com.googlecode.javacv.cpp.opencv_core.cvDrawContours;
import static com.googlecode.javacv.cpp.opencv_core.cvGetSize;
import static com.googlecode.javacv.cpp.opencv_core.cvPoint;
import static com.googlecode.javacv.cpp.opencv_highgui.cvLoadImage;
import static com.googlecode.javacv.cpp.opencv_highgui.cvSaveImage;
import static com.googlecode.javacv.cpp.opencv_imgproc.CV_BGR2GRAY;
import static com.googlecode.javacv.cpp.opencv_imgproc.CV_CHAIN_APPROX_SIMPLE;
import static com.googlecode.javacv.cpp.opencv_imgproc.CV_RETR_CCOMP;
import static com.googlecode.javacv.cpp.opencv_imgproc.CV_THRESH_BINARY;
import static com.googlecode.javacv.cpp.opencv_imgproc.cvCvtColor;
import static com.googlecode.javacv.cpp.opencv_imgproc.cvFindContours;
import static com.googlecode.javacv.cpp.opencv_imgproc.cvThreshold;

import java.awt.Color;
import java.util.Random;

import com.googlecode.javacv.cpp.opencv_core.CvContour;
import com.googlecode.javacv.cpp.opencv_core.CvMemStorage;
import com.googlecode.javacv.cpp.opencv_core.CvScalar;
import com.googlecode.javacv.cpp.opencv_core.CvSeq;
import com.googlecode.javacv.cpp.opencv_core.IplImage; // работает не так как надо
// верни как было, работало-же лучше :) нужно совместить 2 кода, по отдельности они работают великолепно


import com.googlecode.javacv.CanvasFrame;
import com.googlecode.javacv.FrameGrabber;
import com.googlecode.javacv.cpp.opencv_core.*;
import com.googlecode.javacv.OpenCVFrameGrabber;

import java.awt.*;
import java.util.Random;

import static com.googlecode.javacpp.Loader.sizeof;
import static com.googlecode.javacv.cpp.opencv_core.*;
import static com.googlecode.javacv.cpp.opencv_core.cvPoint;
import static com.googlecode.javacv.cpp.opencv_highgui.cvLoadImage;
import static com.googlecode.javacv.cpp.opencv_highgui.cvSaveImage;
import static com.googlecode.javacv.cpp.opencv_highgui.cvShowImage;
import static com.googlecode.javacv.cpp.opencv_imgproc.*;

public class u03 {
    static String sourcePath = "webcam"; // не очень понятно
    static String targetPath = "webcam";
    public static void main(String[] args) {

        //Create canvas frame for displaying webcam.
        CanvasFrame canvas = new CanvasFrame("Webcam");

        //Set Canvas frame to close on exit
        canvas.setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);

        //Declare FrameGrabber to import output from webcam
        FrameGrabber grabber = new OpenCVFrameGrabber("");


        try {

            //Start grabber to capture video
            grabber.start();

            //Declare img as IplImage
            IplImage img;

            while (true) {
                IplImage image = grabber.grab();
                IplImage grayImage = cvCreateImage(cvGetSize(image), IPL_DEPTH_8U, 1);
                cvCvtColor(image, grayImage, CV_BGR2GRAY);

                CvMemStorage mem;
                CvSeq contours = new CvSeq();
                CvSeq ptr = new CvSeq();
                cvThreshold(grayImage, grayImage, 230, 255, CV_THRESH_BINARY);
                mem = cvCreateMemStorage(0);

                cvFindContours(grayImage, mem, contours, sizeof(CvContour.class) , CV_RETR_CCOMP, CV_CHAIN_APPROX_SIMPLE, cvPoint(0,0));

                Random rand = new Random();
                try {
                    for (ptr = contours; ptr != null; ptr = ptr.h_next()) {
                        Color red = new Color(232, 13, 4);
                        Color green = new Color(40, 223, 0);
                        Color black = new Color(0, 0, 0);
                        Color randomColor = new Color(rand.nextFloat(), rand.nextFloat(), rand.nextFloat());
                        CvScalar color = CV_RGB( black.getRed(), black.getGreen(), randomColor.getBlue());
                        cvDrawContours(image, ptr, color, CV_RGB(0,0,0), -1, CV_FILLED, 8, cvPoint(0,0));
                    }
                } catch (Exception e) {
                    continue;
                }


                //inser grabed video fram to IplImage img  работает как надо
                //img = grabber.grab();   вроде как бы все!?

                //Set canvas size as per dimentions of video frame.
                canvas.setCanvasSize(grabber.getImageWidth(), grabber.getImageHeight());

                img = image;
                if (img != null) {
                    //Flip image horizontally
                    cvFlip(img, img, 1);
                    //Show video frame in canvas
                    canvas.showImage(img);
                    //canvas.showImage(img);
                    cvShowImage("webcam", img);
                }
            }
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
}
